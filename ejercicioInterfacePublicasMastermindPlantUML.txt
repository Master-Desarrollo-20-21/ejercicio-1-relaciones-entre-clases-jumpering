@startuml
class Mastermind {
+ play() : void
+ {static} main() : void
- isResumed()
}



class Game{
- {static} ATTEMPTS : int
+ play() : void
- showAllAttempts() :void
- isFinished() : boolean
}

class Attempt{
- piecesBlack : int
- piecesWhite : int
+toString() : String
+isWinner() : boolean
+ play(SecretCombination secretCombination) : void


}


Attempt *--> ProposedCombination
Attempt ..> SecretCombination
Game o-->"0..10" Attempt 

class SecretCombination{
- generateRandom() : void
+ getBlacks(ProposedCombination proposedCombination) : int
+ getWhites(ProposedCombination proposedCombination) : int
+ toString() : String
}



class ProposedCombination{
- userInput : String
+ read() : void
- isValid() : boolean
- isValidLength() : boolean
- isValidColors() : boolean
- isUniqueChars() : boolean
}



abstract class Combination{
- colorList : ArrayList<Color>
# toString() : String
# size() : int
}




Enum Color{
RED
BLUE
YELLOW
ORANGE
PINK
GREEN
+ toChar() : char
+ {static} valueOf(char character) : Color
+ {static} isValidColor(char character) : boolean
}


Mastermind *--> Game
Game *--> SecretCombination
Game ..> Console
SecretCombination -up-^ Combination
ProposedCombination -up-^ Combination
ProposedCombination ..> Console
Mastermind ..> Console
Combination *-->"4" Color
SecretCombination ..> ProposedCombination
@enduml